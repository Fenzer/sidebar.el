;;; sidebar-filemapping.el --- sidebar-filemapping

;; Copyright (C) 2017 Sebastien Chapuis

;; Author: Sebastien Chapuis <sebastien@chapu.is>
;; URL: https://github.com/sebastiencs/sidebar.el
;; Keywords: project, sidebar, projectile, file explorer
;; Version: 0.0.1
;; Package-Requires: ((dash "2.13.0") (projectile "0.11.0"))

;;; License
;;
;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth
;; Floor, Boston, MA 02110-1301, USA.

;;; Commentary:
;;

;;; Code:

(require 's)

(defvar-local sidebar-filemapping-cache-plist nil
  "List to cache the found icon with a file.
\( :icon foo :file myfile.txt :color color \).")

(defvar-local sidebar-filemapping-cache-hashtable nil)

(defconst sidebar-filemapping-plist
  '(
    ( :icon file_video :regexp ".*\\.mpeg$\\|.*\\.mpg$" :color "red" )
    ( :icon file_video :regexp ".*\\.webm$" :color dark_blue )
    ( :icon file_video :regexp ".*\\.flv$" :color red )
    ( :icon file_video :regexp ".*\\.mkv$" :color purple )
    ( :icon file_video :regexp ".*\\.mov$" :color cyan )
    ( :icon file_video :regexp ".*\\.avi$" :color blue )
    ( :icon file_video :regexp ".*\\.mp4$\\|.*\\.m4v$\\|.*\\.h264$" :color dark_blue )
    ( :icon file_video :regexp ".*\\.3gpp$\\|.*\\.3gp$" :color blue )
    ( :icon fa_file_code_o :regexp ".*\\.xml$" :color blue )
    ( :icon file_webpack :regexp "^webpack\\..*" :color blue ) ;; Check
    ( :icon oct_checklist :regexp "^TODO$" :color yellow )
    ( :icon file_tag :regexp ".*\\.pid$" :color orange )
    ( :icon file_tag :regexp ".*\\.gemtags$" :color red )
    ( :icon file_tag :regexp ".*\\.CTAGS$\\|.*\\.TAGS$\\|^CTAGS$\\|^TAGS$" :color blue )
    ( :icon file_tag :regexp ".*\\.ctags$\\|.*\\.tags$\\|^ctags$\\|^tags$" :color blue )
    ( :icon dev_swift :regexp ".*\\.swift$" :color green )
    ( :icon file_stylus :regexp ".*\\.styl$\\|.*\\.stylus$" :color green )
    ( :icon mfizz_scala :regexp ".*\\.sc$\\|.*\\.scala$" :color red )
    ( :icon mfizz_python :regexp ".*\\.tac$" :color dark_pink )
    ( :icon mfizz_python :regexp ".*\\.pyw$" :color maroon )
    ( :icon mfizz_python :regexp ".*\\.pyi$" :color blue )
    ( :icon mfizz_python :regexp ".*\\.py3$" :color dark_blue )
    ( :icon mfizz_python :regexp ".*\\.pyt$" :color dark_green )
    ( :icon mfizz_python :regexp ".*\\.pip$" :color dark_purple )
    ( :icon mfizz_python :regexp ".*\\.gypi$" :color dark_green )
    ( :icon mfizz_python :regexp ".*\\.gyp$" :color green )
    ( :icon mfizz_python :regexp ".*\\.pep$" :color orange )
    ( :icon mfizz_python :regexp ".*\\.isolate$" :color dark_green )
    ( :icon mfizz_python :regexp ".*\\.ipy$" :color blue )
    ( :icon mfizz_python :regexp ".*\\.py$" :color dark_blue )
    ( :icon file_php :regexp "^Phakefile.*" :color dark_green )
    ( :icon file_php :regexp ".*\\.php$" :color dark_blue )
    ( :icon mfizz_perl :regexp ".*\\.psgi$\\|.*\\.xs$" :color red )
    ( :icon mfizz_perl :regexp ".*\\.pm$" :color dark_blue )
    ( :icon mfizz_perl :regexp ".*\\.plx$" :color purple )
    ( :icon mfizz_perl :regexp ".*\\.ph$\\|.*\\.pl$" :color dark_purple )
    ( :icon mfizz_perl :regexp ".*\\.perl$\\|.*\\.pl$" :color blue )
    ( :icon file_org :regexp ".*\\.org$" :color dark_green )
    ( :icon mfizz_nodejs :regexp ".*\\.node$\\|.*\\.node-version$" :color dark_green )
    ( :icon mfizz_nodejs :regexp ".*\\.njs$\\|.*\\.nvmrc$" :color green )
    ( :icon oct_book :regexp "^NEWS$\\|^news$" :color dark_blue )
    ( :icon oct_book :regexp "^CHANGELOG$\\|^ChangeLog$\\|^changelog$" :color blue )
    ( :icon oct_book :regexp "^THANKS\\..*\\|^thanks\\..*" :color dark_blue )
    ( :icon oct_book :regexp "^THANKS-.*\\|^thanks-.*" :color dark_blue )
    ( :icon oct_book :regexp "^THANKS$\\|^thanks$" :color dark_blue )
    ( :icon oct_book :regexp "^MANIFEST$\\|^manifest$" :color dark_blue )
    ( :icon oct_book :regexp "^MAINTAINERS$\\|^maintainers$" :color dark_blue )
    ( :icon oct_book :regexp "^INSTALL$" :color dark_blue )
    ( :icon oct_book :regexp "^HISTORY$" :color dark_blue )
    ( :icon oct_book :regexp "^AUTHORS$" :color light_blue )
    ( :icon oct_book :regexp "^HACKING$\\|^hacking$" :color dark_blue )
    ( :icon oct_book :regexp "^COPYING$\\|^copying$" :color dark_blue )
    ( :icon oct_book :regexp "^CONTRIBUTORS$\\|^contributors$" :color dark_blue )
    ( :icon oct_book :regexp "^CONTRIBUTING$\\|^contributing$" :color dark_blue )
    ( :icon oct_book :regexp "^CONTRIBUTE$\\|^contribute$" :color dark_blue )
    ( :icon oct_book :regexp "^CHANGES$\\|^changes$" :color dark_blue )
    ( :icon oct_book :regexp "^BUGS$\\|^bugs$" :color dark_blue )
    ( :icon oct_book :regexp "^NOTICE$\\|^notice$" :color dark_blue )
    ( :icon oct_book :regexp "^README\\..*\\|^readme\\..*" :color green )
    ( :icon oct_book :regexp "^README-.*\\|^readme-.*" :color green )
    ( :icon oct_book :regexp "^README$\\|^readme$" :color green )
    ( :icon oct_markdown :regexp ".*\\.md$\\|.*\\.markdown$" :color blue )
    ( :icon oct_book :regexp "^LICENSE$\\|^license$" :color yellow )
    ( :icon file_julia :regexp ".*\\.jl$" :color purple )
    ( :icon mfizz_reactjs :regexp ".*\\.jsx$\\|.*\\.react$\\|.*\\.react.js$" :color blue )
    ( :icon mfizz_java_bold :regexp ".*\\.java$" :color purple )
    ( :icon file_dashboard :regexp ".*\\.cpuprofile$" :color green )
    ( :icon file_dashboard :regexp ".*\\.slim$\\|.*\\.skim$" :color orange )
    ( :icon mfizz_ruby :regexp ".*\\.watcher$" :color dark_yellow )
    ( :icon mfizz_ruby :regexp "^rails$" :color red )
    ( :icon mfizz_ruby :regexp ".*\\.rbuild$\\|.*\\.rbw$\\|.*\\.rbx$" :color dark_red )
    ( :icon mfizz_ruby :regexp ".*\\.irbrc$\\|.*\\.gemrc$\\|.*\\.pryrc$\\|.*\\.ruby-gemset$\\|.*\\.ruby-version$" :color red )
    ( :icon mfizz_ruby :regexp "irbrc$\\|gemrc$\\|pryrc$\\|ruby-gemset$\\|ruby-version$" :color red )
    ( :icon mfizz_ruby :regexp ".*\\.pluginspec$\\|.*\\.podspec$\\|.*\\.rabl$\\|.*\\.rake$\\|.*\\.opal$" :color red )
    ( :icon mfizz_ruby :regexp ".*\\.ruby$\\|.*\\.rb$\\|.*\\.ru$\\|.*\\.erb$\\|.*\\.gemspec$\\|.*\\.god$\\|.*\\.mspec$" :color red )
    ( :icon file_haml :regexp ".*\\.haml\\.deface$" :color red )
    ( :icon file_haml :regexp ".*\\.hamlc$" :color maroon )
    ( :icon file_haml :regexp ".*\\.haml$" :color yellow )
    ( :icon mfizz_haskell :regexp ".*\\.lhs$" :color dark_blue )
    ( :icon mfizz_haskell :regexp ".*\\.c2hs$" :color dark_purple )
    ( :icon mfizz_haskell :regexp ".*\\.hsc$" :color blue )
    ( :icon mfizz_haskell :regexp ".*\\.hs$" :color purple )
    ( :icon file_mustache :regexp ".*\\.hbs$\\|.*\\.handlebars$\\|.*mustache$" :color orange )
    ( :icon mfizz_gulp :regexp "^gulpfile\\.coffee$" :color maroon )
    ( :icon mfizz_gulp :regexp "^gulpfile\\.js$\\|^gulpfile\\.babel\\.js$" :color red )
    ( :icon mfizz_grunt :regexp "^gruntfile\\.coffee$" :color maroon )
    ( :icon mfizz_grunt :regexp "^gruntfile\\.js$" :color yellow )
    ( :icon file_go :regexp ".*\\.go$" :color blue )
    ( :icon mfizz_erlang :regexp "^rebar\\.config\\.lock$\\|^rebar\\.lock$" :color red )
    ( :icon mfizz_erlang :regexp "^Emakefile$" :color dark_green )
    ( :icon mfizz_erlang :regexp ".*\\.app\\.src$" :color dark_maroon )
    ( :icon mfizz_erlang :regexp ".*\\.yrl$" :color dark_green )
    ( :icon mfizz_erlang :regexp ".*\\.xrl$" :color green )
    ( :icon mfizz_erlang :regexp ".*\\.hrl$" :color maroon )
    ( :icon mfizz_erlang :regexp ".*\\.beam$" :color dark_red )
    ( :icon mfizz_erlang :regexp ".*\\.erl$" :color red )
    ( :icon mfizz_elm :regexp ".*\\.elm$" :color blue )
    ( :icon mfizz_elixir :regexp "^mix\\.ex$\\|^mix\\.exs$\\|^mix\\.lock$" :color light_purple )
    ( :icon mfizz_elixir :regexp ".*\\.exs$\\|.*\\.eex$" :color purple )
    ( :icon mfizz_elixir :regexp ".*\\.ex$" :color dark_purple )
    ( :icon mfizz_docker :regexp "^docker-sync$" :color dark_orange )
    ( :icon mfizz_docker :regexp "^Dockerfile$\\|^docker-compose$\\|.*\\.dockerfile$\\|.*\\.dockerignore$" :color dark_blue )
    ( :icon dev_coffeescript :regexp ".*\\.iced$" :color blue )
    ( :icon dev_coffeescript :regexp ".*\\.litcoffee$" :color light_maroon )
    ( :icon dev_coffeescript :regexp ".*\\.coffee.erb$" :color red )
    ( :icon dev_coffeescript :regexp ".*\\.coffee.ecr$" :color cyan )
    ( :icon dev_coffeescript :regexp ".*\\.cjsx$" :color dark_maroon )
    ( :icon dev_coffeescript :regexp ".*\\.coffee$" :color maroon )
    ( :icon mfizz_clojure :regexp ".*\\.hic$" :color red )
    ( :icon mfizz_clojure :regexp ".*\\.cljx$" :color red )
    ( :icon mfizz_clojure :regexp ".*\\.cljc$" :color green )
    ( :icon mfizz_clojure :regexp ".*\\.cl2$" :color purple )
    ( :icon mfizz_clojure :regexp ".*\\.clj$" :color blue )
    ( :icon md_vpn_key :regexp "^id_rsa.*" :color red )
    ( :icon md_vpn_key :regexp ".*\\.crt$" :color blue )
    ( :icon md_vpn_key :regexp ".*\\.pem$" :color orange )
    ( :icon md_vpn_key :regexp ".*\\.pub$" :color yellow )
    ( :icon md_vpn_key :regexp ".*\\.key$" :color blue )
    ( :icon dev_bower :regexp ".*\\.bowerrc$\\|bower\\.json$\\|bowerfile$" :color yellow )
    ( :icon file_babel :regexp ".*\\.babel$\\|.*\\.babelrc$\\|.*\\.languagebabel$" :color yellow )
    ( :icon file_babel :regexp ".*\\.babelignore$" :color dark_yellow )
    ( :icon mfizz_sass :regexp ".*\\.scss$\\|.*\\.sass$" :color pink )
    ( :icon fa_file_image_o :regexp ".*\\.gif$" :color yellow )
    ( :icon fa_file_image_o :regexp ".*\\.raw$" :color dark_orange )
    ( :icon fa_file_image_o :regexp ".*\\.bmp$" :color red )
    ( :icon fa_file_image_o :regexp ".*\\.webp$" :color dark_blue )
    ( :icon fa_file_image_o :regexp ".*\\.ico$" :color blue )
    ( :icon fa_file_image_o :regexp ".*\\.jpg$" :color green )
    ( :icon fa_file_image_o :regexp ".*\\.gif$" :color yellow )
    ( :icon fa_file_image_o :regexp ".*\\.png$" :color orange )
    ( :icon file_openoffice :regexp ".*\\.odt$" :color blue )
    ( :icon file_word :regexp ".*\\.doc$\\|.*\\.docx$" :color blue )
    ( :icon mfizz_database_alt2 :regexp ".*\\.git$" )
    ( :icon mfizz_database_alt2 :regexp "^HEAD$\\|^ORIG_HEAD$\\|^FETCH_HEAD$\\|^packed-refs$" :color silver )
    ( :icon mfizz_database_alt2 :regexp ".*\\.qml$" :color pink )
    ( :icon mfizz_database_alt2 :regexp ".*\\.cson$" :color maroon )
    ( :icon mfizz_database_alt2 :regexp ".*\\.yaml$\\|.*\\.yml$" :color light_red )
    ( :icon mfizz_database_alt2 :regexp ".*\\.json$" :color yellow )
    ( :icon file_emacs :regexp ".*emacs.d$" :color dark_purple )
    ( :icon file_emacs :regexp ".*\\.el$\\|.*\\.emacs$\\|.*\\.spacemacs$\\|.*\\.emacs$" :color purple )
    ( :icon fa_file_text_o :regexp ".*\\.log$\\|.*\\.journal$" :color maroon )
    ( :icon fa_file_text_o :regexp ".*\\.srt$" :color purple )
    ( :icon oct_file_binary :regexp ".*\\.asm$\\|.*\\.s$\\|.*\\.nasm$\\|.*\\.masm$" :color light_blue )
    ( :icon oct_file_binary :regexp ".*\\.elf$\\|.*\\.elc$" :color light_pink )
    ( :icon oct_file_binary :regexp "^a\\.out$" :color dark_green )
    ( :icon oct_file_binary :regexp ".*\\.bin$\\|.*\\.bsdiff$\\|.*\\.dat$\\|.*\\.pak$\\|.*\\.pdb$" :color dark_orange )
    ( :icon oct_file_binary :regexp ".*\\.objdump$\\|.*\\.d-objdump$" :color dark_blue )
    ( :icon oct_file_binary :regexp ".*\\.pyc$\\|.*\\.pyo$" :color dark_purple )
    ( :icon file_font :regexp ".*\\.ttf$" :color green )
    ( :icon file_font :regexp ".*\\.woff2$" :color dark_blue )
    ( :icon file_font :regexp ".*\\.woff$" :color blue )
    ( :icon file_font :regexp ".*\\.eot$" :color light_green )
    ( :icon file_font :regexp ".*\\.ttc$" :color dark_green )
    ( :icon file_font :regexp ".*\\.otf$" :color dark_yellow )
    ( :icon mfizz_debian :regexp ".*\\.deb$" :color red )
    ( :icon oct_package :regexp ".*\\.bundle$" :color light_blue )
    ( :icon mfizz_osx :regexp ".*\\.dmg$" :color red )
    ( :icon fa_windows :regexp ".*\\.exe$\\|.*\\.com$\\|.*\\.msi$\\|.*\\.bat$\\|.*\\.cmd$\\|.*\\.reg$" :color dark_purple )
    ( :icon md_music_note :regexp ".*\\.mp3$" :color red )
    ( :icon md_music_note :regexp ".*\\.wma$" :color blue )
    ( :icon md_music_note :regexp ".*\\.m4a$" :color cyan )
    ( :icon md_music_note :regexp ".*\\.flac$" :color dark_red )
    ( :icon md_music_note :regexp ".*\\.wav$" :color yellow )
    ( :icon md_music_note :regexp ".*\\.acc$\\|.*\\.ac3$\\|.*\\.m4p$" :color dark_cyan )
    ( :icon fa_file_pdf_o :regexp ".*\\.pdf$" :color red )
    ( :icon mfizz_redhat :regexp ".*\\.rpm$" :color red )
    ( :icon mfizz_redhat :regexp ".*\\.spec$" :color dark_red )
    ( :icon mfizz_html5 :regexp ".*\\.html$" :color orange )
    ( :icon mfizz_html5 :regexp ".*\\.html\\.erb$" :color red )
    ( :icon mfizz_css3 :regexp ".*\\.less$" :color dark_blue )
    ( :icon mfizz_css3 :regexp ".*\\.css$" :color blue )
    ( :icon mfizz_svg :regexp ".*\\.svg$" :color dark_cyan )
    ( :icon file_test_js :regexp ".*\\.test\\.js$\\|.*\\.test\\.node$\\|.*\\.test\\._js$\\|.*\\.test\\.es6$\\|.*\\.test\\.es$\\|.*test-js$" :color orange )
    ( :icon mfizz_nodejs :regexp ".*\\.js$\\|.*\\.node$\\|.*\\._js$\\|.*\\.es6$\\|.*\\.es$" :color yellow )
    ( :icon oct_terminal :regexp ".*\\.tcsh$\\|.*\\.csh$" :color yellow )
    ( :icon oct_terminal :regexp "^depcomp$\\|^libtool$\\|^compile$" :color red )
    ( :icon oct_terminal :regexp "^configure$\\|^config\\.guess$\\|^config\\.rpath$\\|^config\\.status$\\|^config\\.sub$\\|^bootstrap$" :color red )
    ( :icon oct_terminal :regexp ".*\\.login$\\|.*\\.profile$\\|.*\\.inputrc$" :color red )
    ( :icon oct_terminal :regexp ".*\\.zsh$" :color blue )
    ( :icon oct_terminal :regexp ".*\\.ksh$" :color dark_yellow )
    ( :icon oct_terminal :regexp ".*\\.bashrc$\\|.*\\.bash_profile$" :color dark_purple )
    ( :icon oct_terminal :regexp ".*\\.sh$\\|.*\\.rc$\\|.*\\.bats$\\|.*\\.bash$\\|.*\\.tool$\\|.*\\.install$\\|.*\\.command$" :color purple )
    ( :icon oct_terminal :regexp ".*\\.fish$\\|.*\\.fishrc$" :color green )
    ( :icon oct_file_zip :regexp ".*\\.rar$" :color blue )
    ( :icon file_config :regexp ".*\\.conf$\\|.*\\.config$\\|.*\\.ini$\\|.*\\.desktop$\\|.*\\.cfg$\\|.*\\.directory$\\|.*prefs$" :color yellow )
    ( :icon oct_file_zip :regexp ".*\\.egg$" :color light_orange )
    ( :icon oct_file_zip :regexp ".*\\.xar$" :color dark_orange )
    ( :icon oct_file_zip :regexp ".*\\.war$" :color purple )
    ( :icon oct_file_zip :regexp ".*\\.jar$" :color dark_pink )
    ( :icon oct_file_zip :regexp ".*\\.epub$" :color green )
    ( :icon oct_file_zip :regexp ".*\\.whl$" :color dark_blue )
    ( :icon oct_file_zip :regexp ".*\\.gem$" :color red )
    ( :icon oct_file_zip :regexp ".*\\.xpi$" :color orange )
    ( :icon oct_file_zip :regexp ".*\\.iso$" :color blue )
    ( :icon oct_file_zip :regexp ".*\\.nzb$" :color light_maroon )
    ( :icon oct_file_zip :regexp ".*\\.bz2$" :color dark_cyan )
    ( :icon oct_file_zip :regexp ".*\\.tar$" :color dark_blue )
    ( :icon oct_file_zip :regexp ".*\\.apk$" :color red )
    ( :icon oct_file_zip :regexp ".*\\.7z$" :color maroon )
    ( :icon oct_file_zip :regexp ".*\\.tgz$\\|.*\\.gz$" :color dark_blue )
    ( :icon oct_file_zip :regexp ".*\\.zip$\\|.*\\.xz$\\|.*\\.z$" :color dark_red )
    ( :icon file_cmake :regexp ".*\\.cmake$" :color green )
    ( :icon file_cmake :regexp "^CMakeLists\\.txt$" :color red )
    ( :icon mfizz_cplusplus :regexp ".*\\.cpp$\\|.*\\.c\\+\\+$\\|.*\\.cxx$\\|.*\\.cc$" :color blue )
    ( :icon mfizz_cplusplus :regexp ".*\\.hh$\\|.*\\.hpp$\\|.*\\.hxx$" :color purple )
    ( :icon mfizz_c :regexp ".*\\.c$" :color blue )
    ( :icon mfizz_c :regexp ".*\\.h$" :color purple )
    ( :icon file_powerpoint :regexp ".*\\.ppt$\\|.*\\.pps$\\|.*\\.ppsx$\\|.*\\.pptx$" :color light_pink )
    ( :icon oct_bookmark :regexp "^bookmark$" :color light_pink )
    ( :icon fa_file_text_o :regexp ".*\\.txt$\\|.*\\.text$" :color blue )
    ( :icon oct_database :regexp ".*\\.cache$" :color green )
    ( :icon oct_package :regexp "^\\*Packages\\*$" :color green )
    ( :icon file_diff :regexp "^\\*magit-diff:.*" :color green )
    ( :icon fa_git :regexp "^\\*magit:.*" :color green )
    ( :icon file_emacs :regexp "^\\*.*\\*$" :color blue_grey )
    ( :icon fa_folder :regexp "^\\.$\\|^\\.\\.$" :color dark_blue )
    ( :icon oct_gear :regexp "^\\..*" :color 0 )))

(defconst sidebar-filemapping-gui-color
  '((red "#FF3A20")
    (pink "#F50057")
    (purple "#D500F9")
    (blue "#2979FF")
    (cyan "#00E5FF")
    (green "#00E676")
    (yellow "#FFEA00")
    (orange "#FF9100")
    (maroon "#795548")
    (silver "#757575")
    (light_red "#FF5D48")
    (light_pink "#FF4081")
    (light_purple "#E040FB")
    (light_blue "#448AFF")
    (light_cyan "#18FFFF")
    (light_green "#76FF03")
    (light_yellow "#FFFF00")
    (light_orange "#FFAB40")
    (light_maroon "#8D6E63")
    (light_silver "#BDBDBD")
    (dark_red "#D1301B")
    (dark_pink "#C51162")
    (dark_purple "#AA00FF")
    (dark_blue "#2962FF")
    (dark_cyan "#00B8D4")
    (dark_green "#2E7D32")
    (dark_yellow "#FFD600")
    (dark_orange "#FF6D00")
    (dark_maroon "#5D4037")
    (dark_silver "#616161")
    (blue_grey "#607D8B")))

(defun sidebar-filemapping-getcolor (color)
  "COLOR."
  (car (alist-get color sidebar-filemapping-gui-color)))

(defun sidebar-filemapping-put-in-cache (plist file)
  "PLIST FILE."
  (puthash file plist sidebar-filemapping-cache-hashtable)
  plist)

(defun sidebar-filemapping-get-in-cache (filename)
  "FILENAME."
  (when (not sidebar-filemapping-cache-hashtable)
    (setq sidebar-filemapping-cache-hashtable (make-hash-table :test 'equal :size 200)))
  (gethash filename sidebar-filemapping-cache-hashtable))

(defun sidebar-filemapping-lookup (filename)
  "FILENAME."
  (let ((iterator sidebar-filemapping-plist)
	(found (sidebar-filemapping-get-in-cache filename)))
    (if found
	found
      (while iterator
	(let* ((elem (car iterator))
	       (result (s-match (plist-get elem :regexp) filename)))
	  (if result
	      (setq found `(:icon ,(plist-get elem :icon) :color ,(sidebar-filemapping-getcolor (plist-get elem :color)))
		    iterator nil)
	    (setq iterator (cdr iterator)))))
      (unless found
	(setq found '(:icon fa_file_o)))
      (sidebar-filemapping-put-in-cache found filename))))

(provide 'sidebar-filemapping)

;;; sidebar-filemapping.el ends here
